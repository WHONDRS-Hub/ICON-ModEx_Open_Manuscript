Temperature_1_Rsquared = round(summary(lm(Temperature_1 ~ Elapsed_Minutes))$r.squared, 2),
Temperature_1_RMSE = '',
Temperature_1_NRMSE = '',
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(max(Temperature_1, na.rm = T) - min(Temperature_1, na.rm = T), 2),
)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(lm(Temperature_1 ~ Elapsed_Minutes))[2], 3),
Temperature_1_Rsquared = round(summary(lm(Temperature_1 ~ Elapsed_Minutes))$r.squared, 2),
Temperature_1_RMSE = '',
Temperature_1_NRMSE = '',
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(max(Temperature_1, na.rm = T) - min(Temperature_1, na.rm = T), 2),
)
temp_1_lm <- all_data %>% lm(Temperature_1 ~ Elapsed_Minutes)
temp_1_lm <- lm(all_data$Temperature_1 ~ all_data$Elapsed_Minutes)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = sqrt(mean(temp_1_lm$residuals^2)),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = (Temperature_1_RMSE/Temperature_1_Range)*100,
)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = round((Temperature_1_RMSE/Temperature_1_Range)*100, 2),
)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = round((Temperature_1_RMSE/Temperature_1_Mean)*100, 2),
)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = round(((Temperature_1_RMSE/Temperature_1_Mean)*100), 2),
)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = round(((Temperature_1_RMSE/Temperature_1_Mean)*100), 2)
)
rm(summary_row)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = round(((Temperature_1_RMSE/Temperature_1_Mean)*100), 2)
)
View(summary_row)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2)
) %>%
mutate(Temperature_1_NRMSE = round(((Temperature_1_RMSE/Temperature_1_Mean)*100), 2))
View(summary_row)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2)
) %>%
mutate(Temperature_1_NRMSE = round((Temperature_1_RMSE/Temperature_1_Mean), 2))
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2)
) %>%
mutate(Temperature_1_NRMSE = signif((Temperature_1_RMSE/Temperature_1_Mean), 2))
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 2),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2)
) %>%
mutate(Temperature_1_NRMSE = signif((Temperature_1_RMSE/Temperature_1_Mean), 1))
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = coef(temp_1_lm)[2],
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2)
) %>%
mutate(Temperature_1_NRMSE = signif((Temperature_1_RMSE/Temperature_1_Mean), 1))
View(all_data)
summary(temp_1_lm)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 3),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = signif((Temperature_1_RMSE/Temperature_1_Mean), 1)
)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 3),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE_mean = signif((Temperature_1_RMSE/Temperature_1_Mean), 1),
Temperature_1_NRMSE_range = signif((Temperature_1_RMSE/Temperature_1_Range), 1)
)
do_1_lm <- lm(all_data$Dissolved_Oxygen_1 ~ all_data$Elapsed_Minutes)
do_2_lm <- lm(all_data$Dissolved_Oxygen_2 ~ all_data$Elapsed_Minutes)
do_3_lm <- lm(all_data$Dissolved_Oxygen_3 ~ all_data$Elapsed_Minutes)
sat_1_lm <- lm(all_data$Dissolved_Oxygen_Saturation_1 ~ all_data$Elapsed_Minutes)
sat_2_lm <- lm(all_data$Dissolved_Oxygen_Saturation_2 ~ all_data$Elapsed_Minutes)
sat_3_lm <- lm(all_data$Dissolved_Oxygen_Saturation_3 ~ all_data$Elapsed_Minutes)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 3),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = signif((Temperature_1_RMSE/Temperature_1_Mean), 1),
Temperature_2_Slope = signif(coef(temp_2_lm)[2], 3),
Temperature_2_Rsquared = round(summary(temp_2_lm)$r.squared, 2),
Temperature_2_RMSE = round(sqrt(mean(temp_2_lm$residuals^2)), 2),
Temperature_2_Mean = round(mean(Temperature_2, na.rm = T), 2),
Temperature_2_Range = round(diff(range(Temperature_2, na.rm = T)), 2),
Temperature_2_NRMSE = signif((Temperature_2_RMSE/Temperature_2_Mean), 1),
Temperature_3_Slope = signif(coef(temp_3_lm)[2], 3),
Temperature_3_Rsquared = round(summary(temp_3_lm)$r.squared, 2),
Temperature_3_RMSE = round(sqrt(mean(temp_3_lm$residuals^2)), 2),
Temperature_3_Mean = round(mean(Temperature_3, na.rm = T), 2),
Temperature_3_Range = round(diff(range(Temperature_3, na.rm = T)), 2),
Temperature_3_NRMSE = signif((Temperature_3_RMSE/Temperature_3_Mean), 1),
Dissolved_Oxygen_1_Slope = signif(coef(do_1_lm)[2], 3),
Dissolved_Oxygen_1_Rsquared = round(summary(do_1_lm)$r.squared, 2),
Dissolved_Oxygen_1_RMSE = round(sqrt(mean(do_1_lm$residuals^2)), 2),
Dissolved_Oxygen_1_Mean = round(mean(Dissolved_Oxygen_1, na.rm = T), 2),
Dissolved_Oxygen_1_Range = round(diff(range(Dissolved_Oxygen_1, na.rm = T)), 2),
Dissolved_Oxygen_1_NRMSE = signif((Dissolved_Oxygen_1_RMSE/Dissolved_Oxygen_1_Mean), 1),
Dissolved_Oxygen_2_Slope = signif(coef(do_2_lm)[2], 3),
Dissolved_Oxygen_2_Rsquared = round(summary(do_2_lm)$r.squared, 2),
Dissolved_Oxygen_2_RMSE = round(sqrt(mean(do_2_lm$residuals^2)), 2),
Dissolved_Oxygen_2_Mean = round(mean(Dissolved_Oxygen_2, na.rm = T), 2),
Dissolved_Oxygen_2_Range = round(diff(range(Dissolved_Oxygen_2, na.rm = T)), 2),
Dissolved_Oxygen_2_NRMSE = signif((Dissolved_Oxygen_2_RMSE/Dissolved_Oxygen_2_Mean), 1),
Dissolved_Oxygen_3_Slope = signif(coef(do_3_lm)[2], 3),
Dissolved_Oxygen_3_Rsquared = round(summary(do_3_lm)$r.squared, 2),
Dissolved_Oxygen_3_RMSE = round(sqrt(mean(do_3_lm$residuals^2)), 2),
Dissolved_Oxygen_3_Mean = round(mean(Dissolved_Oxygen_3, na.rm = T), 2),
Dissolved_Oxygen_3_Range = round(diff(range(Dissolved_Oxygen_3, na.rm = T)), 2),
Dissolved_Oxygen_3_NRMSE = signif((Dissolved_Oxygen_3_RMSE/Dissolved_Oxygen_3_Mean), 1),
Dissolved_Oxygen_Saturation_1_Slope = signif(coef(sat_1_lm)[2], 3),
Dissolved_Oxygen_Saturation_1_Rsquared = round(summary(sat_1_lm)$r.squared, 2),
Dissolved_Oxygen_Saturation_1_RMSE = round(sqrt(mean(sat_1_lm$residuals^2)), 2),
Dissolved_Oxygen_Saturation_1_Mean = round(mean(Dissolved_Oxygen_Saturation_1, na.rm = T), 2),
Dissolved_Oxygen_Saturation_1_Range = round(diff(range(Dissolved_Oxygen_Saturation_1, na.rm = T)), 2),
Dissolved_Oxygen_Saturation_1_NRMSE = signif((Dissolved_Oxygen_Saturation_1_RMSE/Dissolved_Oxygen_Saturation_1_Mean), 1),
Dissolved_Oxygen_Saturation_2_Slope = signif(coef(sat_2_lm)[2], 3),
Dissolved_Oxygen_Saturation_2_Rsquared = round(summary(sat_2_lm)$r.squared, 2),
Dissolved_Oxygen_Saturation_2_RMSE = round(sqrt(mean(sat_2_lm$residuals^2)), 2),
Dissolved_Oxygen_Saturation_2_Mean = round(mean(Dissolved_Oxygen_Saturation_2, na.rm = T), 2),
Dissolved_Oxygen_Saturation_2_Range = round(diff(range(Dissolved_Oxygen_Saturation_2, na.rm = T)), 2),
Dissolved_Oxygen_Saturation_2_NRMSE = signif((Dissolved_Oxygen_Saturation_2_RMSE/Dissolved_Oxygen_Saturation_2_Mean), 1),
Dissolved_Oxygen_Saturation_3_Slope = signif(coef(sat_3_lm)[2], 3),
Dissolved_Oxygen_Saturation_3_Rsquared = round(summary(sat_3_lm)$r.squared, 2),
Dissolved_Oxygen_Saturation_3_RMSE = round(sqrt(mean(sat_3_lm$residuals^2)), 2),
Dissolved_Oxygen_Saturation_3_Mean = round(mean(Dissolved_Oxygen_Saturation_3, na.rm = T), 2),
Dissolved_Oxygen_Saturation_3_Range = round(diff(range(Dissolved_Oxygen_Saturation_3, na.rm = T)), 2),
Dissolved_Oxygen_Saturation_3_NRMSE = signif((Dissolved_Oxygen_Saturation_3_RMSE/Dissolved_Oxygen_Saturation_3_Mean), 1)
)
temp_1_lm <- lm(all_data$Temperature_1 ~ all_data$Elapsed_Minutes)
temp_2_lm <- lm(all_data$Temperature_2 ~ all_data$Elapsed_Minutes)
temp_3_lm <- lm(all_data$Temperature_3 ~ all_data$Elapsed_Minutes)
do_1_lm <- lm(all_data$Dissolved_Oxygen_1 ~ all_data$Elapsed_Minutes)
do_2_lm <- lm(all_data$Dissolved_Oxygen_2 ~ all_data$Elapsed_Minutes)
do_3_lm <- lm(all_data$Dissolved_Oxygen_3 ~ all_data$Elapsed_Minutes)
sat_1_lm <- lm(all_data$Dissolved_Oxygen_Saturation_1 ~ all_data$Elapsed_Minutes)
sat_2_lm <- lm(all_data$Dissolved_Oxygen_Saturation_2 ~ all_data$Elapsed_Minutes)
sat_3_lm <- lm(all_data$Dissolved_Oxygen_Saturation_3 ~ all_data$Elapsed_Minutes)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 3),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = round(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = signif((Temperature_1_RMSE/Temperature_1_Mean), 1),
Temperature_2_Slope = signif(coef(temp_2_lm)[2], 3),
Temperature_2_Rsquared = round(summary(temp_2_lm)$r.squared, 2),
Temperature_2_RMSE = round(sqrt(mean(temp_2_lm$residuals^2)), 2),
Temperature_2_Mean = round(mean(Temperature_2, na.rm = T), 2),
Temperature_2_Range = round(diff(range(Temperature_2, na.rm = T)), 2),
Temperature_2_NRMSE = signif((Temperature_2_RMSE/Temperature_2_Mean), 1),
Temperature_3_Slope = signif(coef(temp_3_lm)[2], 3),
Temperature_3_Rsquared = round(summary(temp_3_lm)$r.squared, 2),
Temperature_3_RMSE = round(sqrt(mean(temp_3_lm$residuals^2)), 2),
Temperature_3_Mean = round(mean(Temperature_3, na.rm = T), 2),
Temperature_3_Range = round(diff(range(Temperature_3, na.rm = T)), 2),
Temperature_3_NRMSE = signif((Temperature_3_RMSE/Temperature_3_Mean), 1),
Dissolved_Oxygen_1_Slope = signif(coef(do_1_lm)[2], 3),
Dissolved_Oxygen_1_Rsquared = round(summary(do_1_lm)$r.squared, 2),
Dissolved_Oxygen_1_RMSE = round(sqrt(mean(do_1_lm$residuals^2)), 2),
Dissolved_Oxygen_1_Mean = round(mean(Dissolved_Oxygen_1, na.rm = T), 2),
Dissolved_Oxygen_1_Range = round(diff(range(Dissolved_Oxygen_1, na.rm = T)), 2),
Dissolved_Oxygen_1_NRMSE = signif((Dissolved_Oxygen_1_RMSE/Dissolved_Oxygen_1_Mean), 1),
Dissolved_Oxygen_2_Slope = signif(coef(do_2_lm)[2], 3),
Dissolved_Oxygen_2_Rsquared = round(summary(do_2_lm)$r.squared, 2),
Dissolved_Oxygen_2_RMSE = round(sqrt(mean(do_2_lm$residuals^2)), 2),
Dissolved_Oxygen_2_Mean = round(mean(Dissolved_Oxygen_2, na.rm = T), 2),
Dissolved_Oxygen_2_Range = round(diff(range(Dissolved_Oxygen_2, na.rm = T)), 2),
Dissolved_Oxygen_2_NRMSE = signif((Dissolved_Oxygen_2_RMSE/Dissolved_Oxygen_2_Mean), 1),
Dissolved_Oxygen_3_Slope = signif(coef(do_3_lm)[2], 3),
Dissolved_Oxygen_3_Rsquared = round(summary(do_3_lm)$r.squared, 2),
Dissolved_Oxygen_3_RMSE = round(sqrt(mean(do_3_lm$residuals^2)), 2),
Dissolved_Oxygen_3_Mean = round(mean(Dissolved_Oxygen_3, na.rm = T), 2),
Dissolved_Oxygen_3_Range = round(diff(range(Dissolved_Oxygen_3, na.rm = T)), 2),
Dissolved_Oxygen_3_NRMSE = signif((Dissolved_Oxygen_3_RMSE/Dissolved_Oxygen_3_Mean), 1),
Dissolved_Oxygen_Saturation_1_Slope = signif(coef(sat_1_lm)[2], 3),
Dissolved_Oxygen_Saturation_1_Rsquared = round(summary(sat_1_lm)$r.squared, 2),
Dissolved_Oxygen_Saturation_1_RMSE = round(sqrt(mean(sat_1_lm$residuals^2)), 2),
Dissolved_Oxygen_Saturation_1_Mean = round(mean(Dissolved_Oxygen_Saturation_1, na.rm = T), 2),
Dissolved_Oxygen_Saturation_1_Range = round(diff(range(Dissolved_Oxygen_Saturation_1, na.rm = T)), 2),
Dissolved_Oxygen_Saturation_1_NRMSE = signif((Dissolved_Oxygen_Saturation_1_RMSE/Dissolved_Oxygen_Saturation_1_Mean), 1),
Dissolved_Oxygen_Saturation_2_Slope = signif(coef(sat_2_lm)[2], 3),
Dissolved_Oxygen_Saturation_2_Rsquared = round(summary(sat_2_lm)$r.squared, 2),
Dissolved_Oxygen_Saturation_2_RMSE = round(sqrt(mean(sat_2_lm$residuals^2)), 2),
Dissolved_Oxygen_Saturation_2_Mean = round(mean(Dissolved_Oxygen_Saturation_2, na.rm = T), 2),
Dissolved_Oxygen_Saturation_2_Range = round(diff(range(Dissolved_Oxygen_Saturation_2, na.rm = T)), 2),
Dissolved_Oxygen_Saturation_2_NRMSE = signif((Dissolved_Oxygen_Saturation_2_RMSE/Dissolved_Oxygen_Saturation_2_Mean), 1),
Dissolved_Oxygen_Saturation_3_Slope = signif(coef(sat_3_lm)[2], 3),
Dissolved_Oxygen_Saturation_3_Rsquared = round(summary(sat_3_lm)$r.squared, 2),
Dissolved_Oxygen_Saturation_3_RMSE = round(sqrt(mean(sat_3_lm$residuals^2)), 2),
Dissolved_Oxygen_Saturation_3_Mean = round(mean(Dissolved_Oxygen_Saturation_3, na.rm = T), 2),
Dissolved_Oxygen_Saturation_3_Range = round(diff(range(Dissolved_Oxygen_Saturation_3, na.rm = T)), 2),
Dissolved_Oxygen_Saturation_3_NRMSE = signif((Dissolved_Oxygen_Saturation_3_RMSE/Dissolved_Oxygen_Saturation_3_Mean), 1)
)
summary_row <- all_data %>%
summarize(Site_ID = unique(Site_ID),
Temperature_1_Slope = signif(coef(temp_1_lm)[2], 3),
Temperature_1_Rsquared = round(summary(temp_1_lm)$r.squared, 2),
Temperature_1_RMSE = signif(sqrt(mean(temp_1_lm$residuals^2)), 2),
Temperature_1_Mean = round(mean(Temperature_1, na.rm = T), 2),
Temperature_1_Range = round(diff(range(Temperature_1, na.rm = T)), 2),
Temperature_1_NRMSE = signif((Temperature_1_RMSE/Temperature_1_Mean), 1),
Temperature_2_Slope = signif(coef(temp_2_lm)[2], 3),
Temperature_2_Rsquared = round(summary(temp_2_lm)$r.squared, 2),
Temperature_2_RMSE = signif(sqrt(mean(temp_2_lm$residuals^2)), 2),
Temperature_2_Mean = round(mean(Temperature_2, na.rm = T), 2),
Temperature_2_Range = round(diff(range(Temperature_2, na.rm = T)), 2),
Temperature_2_NRMSE = signif((Temperature_2_RMSE/Temperature_2_Mean), 1),
Temperature_3_Slope = signif(coef(temp_3_lm)[2], 3),
Temperature_3_Rsquared = round(summary(temp_3_lm)$r.squared, 2),
Temperature_3_RMSE = signif(sqrt(mean(temp_3_lm$residuals^2)), 2),
Temperature_3_Mean = round(mean(Temperature_3, na.rm = T), 2),
Temperature_3_Range = round(diff(range(Temperature_3, na.rm = T)), 2),
Temperature_3_NRMSE = signif((Temperature_3_RMSE/Temperature_3_Mean), 1),
Dissolved_Oxygen_1_Slope = signif(coef(do_1_lm)[2], 3),
Dissolved_Oxygen_1_Rsquared = round(summary(do_1_lm)$r.squared, 2),
Dissolved_Oxygen_1_RMSE = signif(sqrt(mean(do_1_lm$residuals^2)), 2),
Dissolved_Oxygen_1_Mean = round(mean(Dissolved_Oxygen_1, na.rm = T), 2),
Dissolved_Oxygen_1_Range = round(diff(range(Dissolved_Oxygen_1, na.rm = T)), 2),
Dissolved_Oxygen_1_NRMSE = signif((Dissolved_Oxygen_1_RMSE/Dissolved_Oxygen_1_Mean), 1),
Dissolved_Oxygen_2_Slope = signif(coef(do_2_lm)[2], 3),
Dissolved_Oxygen_2_Rsquared = round(summary(do_2_lm)$r.squared, 2),
Dissolved_Oxygen_2_RMSE = signif(sqrt(mean(do_2_lm$residuals^2)), 2),
Dissolved_Oxygen_2_Mean = round(mean(Dissolved_Oxygen_2, na.rm = T), 2),
Dissolved_Oxygen_2_Range = round(diff(range(Dissolved_Oxygen_2, na.rm = T)), 2),
Dissolved_Oxygen_2_NRMSE = signif((Dissolved_Oxygen_2_RMSE/Dissolved_Oxygen_2_Mean), 1),
Dissolved_Oxygen_3_Slope = signif(coef(do_3_lm)[2], 3),
Dissolved_Oxygen_3_Rsquared = round(summary(do_3_lm)$r.squared, 2),
Dissolved_Oxygen_3_RMSE = signif(sqrt(mean(do_3_lm$residuals^2)), 2),
Dissolved_Oxygen_3_Mean = round(mean(Dissolved_Oxygen_3, na.rm = T), 2),
Dissolved_Oxygen_3_Range = round(diff(range(Dissolved_Oxygen_3, na.rm = T)), 2),
Dissolved_Oxygen_3_NRMSE = signif((Dissolved_Oxygen_3_RMSE/Dissolved_Oxygen_3_Mean), 1),
Dissolved_Oxygen_Saturation_1_Slope = signif(coef(sat_1_lm)[2], 3),
Dissolved_Oxygen_Saturation_1_Rsquared = round(summary(sat_1_lm)$r.squared, 2),
Dissolved_Oxygen_Saturation_1_RMSE = signif(sqrt(mean(sat_1_lm$residuals^2)), 2),
Dissolved_Oxygen_Saturation_1_Mean = round(mean(Dissolved_Oxygen_Saturation_1, na.rm = T), 2),
Dissolved_Oxygen_Saturation_1_Range = round(diff(range(Dissolved_Oxygen_Saturation_1, na.rm = T)), 2),
Dissolved_Oxygen_Saturation_1_NRMSE = signif((Dissolved_Oxygen_Saturation_1_RMSE/Dissolved_Oxygen_Saturation_1_Mean), 1),
Dissolved_Oxygen_Saturation_2_Slope = signif(coef(sat_2_lm)[2], 3),
Dissolved_Oxygen_Saturation_2_Rsquared = round(summary(sat_2_lm)$r.squared, 2),
Dissolved_Oxygen_Saturation_2_RMSE = signif(sqrt(mean(sat_2_lm$residuals^2)), 2),
Dissolved_Oxygen_Saturation_2_Mean = round(mean(Dissolved_Oxygen_Saturation_2, na.rm = T), 2),
Dissolved_Oxygen_Saturation_2_Range = round(diff(range(Dissolved_Oxygen_Saturation_2, na.rm = T)), 2),
Dissolved_Oxygen_Saturation_2_NRMSE = signif((Dissolved_Oxygen_Saturation_2_RMSE/Dissolved_Oxygen_Saturation_2_Mean), 1),
Dissolved_Oxygen_Saturation_3_Slope = signif(coef(sat_3_lm)[2], 3),
Dissolved_Oxygen_Saturation_3_Rsquared = round(summary(sat_3_lm)$r.squared, 2),
Dissolved_Oxygen_Saturation_3_RMSE = signif(sqrt(mean(sat_3_lm$residuals^2)), 2),
Dissolved_Oxygen_Saturation_3_Mean = round(mean(Dissolved_Oxygen_Saturation_3, na.rm = T), 2),
Dissolved_Oxygen_Saturation_3_Range = round(diff(range(Dissolved_Oxygen_Saturation_3, na.rm = T)), 2),
Dissolved_Oxygen_Saturation_3_NRMSE = signif((Dissolved_Oxygen_Saturation_3_RMSE/Dissolved_Oxygen_Saturation_3_Mean), 1)
)
0.0062/9.83
source("C:/Users/forb086/OneDrive - PNNL/Data Generation and Files/R code/Data_Package_Code/SPS_manual_chamber.R", echo=TRUE)
library(tidyverse)
rm(list=ls(all=T))
current_path <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("./../")
# File path to the dynamic learning rivers github repo
# https://github.com/parallelworks/dynamic-learning-rivers/tree/Nov-2023-log10
# Ensure you are on the correct branch. For this script, I am using the Nov-2023-log10-DO-update-correct branch
dynamic_learning_dir <- './../dynamic-learning-rivers/'
# Data downloaded from https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1923689
observed_CM <- read_csv('./v3_CM_SSS_Data_Package/Sample_Data/v2_CM_SSS_Sediment_Normalized_Respiration_Rates.csv',
skip = 2,
na = c('N/A', '-9999', NA, '')) %>%
filter(!is.na(Sample_Name)) %>%
select(-Field_Name, -Material, -IGSN) %>%
rename(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment) %>%
mutate(Parent_ID = str_extract(Sample_Name, '.{6}(?=_INC)'))
# Data downloaded from https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1729719
# add deviations to S19S to match CM; pulled from "WHONDRS_S19S_Sediment_Normalized_Respiration_Methods.txt"
dev1 <- c("S19S_0006_SED_INC-D", "S19S_0011_SED_INC-M", "S19S_0013_SED_INC-D", "S19S_0013_SED_INC-M", "S19S_0013_SED_INC-U", "S19S_0014_SED_INC-D", "S19S_0014_SED_INC-M", "S19S_0016_SED_INC-M", "S19S_0020_SED_INC-M", "S19S_0021_SED_INC-D", "S19S_0024_SED_INC-D", "S19S_0024_SED_INC-M", "S19S_0024_SED_INC-U", "S19S_0039_SED_INC-D", "S19S_0039_SED_INC-U", "S19S_0040_SED_INC-U", "S19S_0044_SED_INC-D", "S19S_0044_SED_INC-M", "S19S_0044_SED_INC-U", "S19S_0047_SED_INC-M", "S19S_0047_SED_INC-U", "S19S_0054_SED_INC-D", "S19S_0054_SED_INC-M", "S19S_0054_SED_INC-U", "S19S_0055_SED_INC-D", "S19S_0059_SED_INC-D", "S19S_0061_SED_INC-D", "S19S_0061_SED_INC-M", "S19S_0066_SED_INC-M", "S19S_0066_SED_INC-U", "S19S_0067_SED_INC-D", "S19S_0067_SED_INC-M", "S19S_0067_SED_INC-U", "S19S_0087_SED_INC-D", "S19S_0089_SED_INC-D", "S19S_0089_SED_INC-M", "S19S_0097_SED_INC-U")
dev2 <- c("S19S_0006_SED_INC-D", "S19S_0006_SED_INC-M", "S19S_0006_SED_INC-U", "S19S_0007_SED_INC-D", "S19S_0007_SED_INC-U", "S19S_0008_SED_INC-D", "S19S_0008_SED_INC-M", "S19S_0008_SED_INC-U", "S19S_0009_SED_INC-D", "S19S_0009_SED_INC-M", "S19S_0009_SED_INC-U", "S19S_0010_SED_INC-D", "S19S_0010_SED_INC-M", "S19S_0010_SED_INC-U", "S19S_0036_SED_INC-M")
observed_S19S <- read_csv('./v8_WHONDRS_S19S_Sediment/WHONDRS_S19S_Sediment_Normalized_Respiration_Rates.csv') %>%
rename(Sample_Name = Sample_ID) %>%
mutate(Methods_Deviation1 = case_when(Sample_Name %in% dev1 ~ 'RATE_000',
TRUE ~ NA),
Methods_Deviation2 = case_when(Sample_Name %in% dev2 ~ 'INC_QA_002',
TRUE ~ NA)) %>%
unite(Methods_Deviation,
c(Methods_Deviation1, Methods_Deviation2),
sep = '; ',
na.rm = T)%>%
rename(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment)
# Ensure you are on the correct branch. For this script, I am using the Nov-2023-log10 branch
predicted <- read_csv(str_c(dynamic_learning_dir, '/scripts/post_01_output_ml_predict_avg.csv')) %>%
rename(Predicted_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment,
Predicted_Latitude = Sample_Latitude,
Predicted_Longitude = Sample_Longitude,
Sample_Name = Sample_ID)
CM_metadata <- read_csv('./v3_CM_SSS_Data_Package/v3_CM_SSS_Field_Metadata.csv')
CM_coords <- CM_metadata %>%
select(Parent_ID, Sample_Latitude, Sample_Longitude, Site_ID, Sample_Date) %>%
rename(Observed_Latitude = Sample_Latitude,
Observed_Longitude = Sample_Longitude,
Observed_Sample_Date = Sample_Date)
S19S_metadata <- read_csv('./v8_WHONDRS_S19S_Sediment/WHONDRS_S19S_Sediment_Metadata/v4_WHONDRS_S19S_Metadata.csv') %>%
filter(Study_Code != 'Study code')
# pivot the upstream, downstream, and midstream coordinates to each be a row
u <- S19S_metadata %>%
select(Sample_ID,  US_Latitude_dec.deg, US_Longitude_dec.deg, Date) %>%
rename(Observed_Latitude = US_Latitude_dec.deg,
Observed_Longitude = US_Longitude_dec.deg) %>%
mutate(Sample_Name = paste0(Sample_ID, "_SED_INC-U"))
m <- S19S_metadata %>%
select(Sample_ID,  MS_Latitude_dec.deg, MS_Longitude_dec.deg, Date) %>%
rename(Observed_Latitude = MS_Latitude_dec.deg,
Observed_Longitude = MS_Longitude_dec.deg) %>%
mutate(Sample_Name = paste0(Sample_ID, "_SED_INC-M"))
d <- S19S_metadata %>%
select(Sample_ID,  DS_Latitude_dec.deg, DS_Longitude_dec.deg, Date) %>%
rename(Observed_Latitude = DS_Latitude_dec.deg,
Observed_Longitude = DS_Longitude_dec.deg) %>%
mutate(Sample_Name = paste0(Sample_ID, "_SED_INC-D"))
S19S_coords <- u %>%
add_row(m) %>%
add_row(d) %>%
arrange(Sample_ID) %>%
rename(Site_ID = Sample_ID,
Observed_Sample_Date = Date)
observed_CM_combine <- observed_CM %>%
full_join(CM_coords) %>%
select(-Parent_ID) %>%
mutate(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = as.numeric(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment))
observed_S19S_combine <- observed_S19S %>%
left_join(S19S_coords) %>%
mutate(Observed_Latitude = as.numeric(Observed_Latitude),
Observed_Longitude = as.numeric(Observed_Longitude),
Observed_Sample_Date = ymd(Observed_Sample_Date))
full_observed <- observed_CM_combine %>%
add_row(observed_S19S_combine) %>%
mutate(Sample_Name = str_remove(Sample_Name, '_INC'),
Sample_Name = str_remove(Sample_Name, '_SED'))
predicted_filter <- predicted %>%
filter(str_detect(Sample_Name, '^10|^CM|^S19S|^SSS|^SP')) %>%
mutate(Sample_Name = case_when(str_detect(Sample_Name, '^10') ~ str_c('MP', Sample_Name, sep = '-'),
TRUE ~ Sample_Name))
# get list of observed sites to remove duplicated predictions
observed_site_list <- full_observed %>%
filter(str_detect(Site_ID, '^MP-|^SP-'),
!is.na(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment)) %>%
select(Site_ID) %>%
pull()
predicted_filter <- predicted_filter %>%
filter(!Sample_Name %in% observed_site_list)
prediction_files <- list.files(str_c(dynamic_learning_dir, '/ml_models/'), 'sl_predictions.csv',full.names = T, recursive = T)
combine <- tibble("Sample_ID" = as.character(),
"Sample_Longitude" = as.numeric(),
"Sample_Latitude" = as.numeric(),
"Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment" = as.numeric())
for (prediction_file in prediction_files) {
read_file <- read_csv(prediction_file) %>%
filter(str_detect(Sample_ID, 'S19S_0085')) %>%
select(-contains('error'))
combine <- combine %>%
add_row(read_file)
}
#average the model predictions
summary <- combine %>%
group_by(Sample_ID, Sample_Longitude, Sample_Latitude) %>%
summarise(Predicted_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = mean(Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment)) %>%
rename(Sample_Name = Sample_ID,
Predicted_Longitude = Sample_Longitude,
Predicted_Latitude = Sample_Latitude) %>%
add_column("mean.error" = NA,
"predict.error" = NA,
"pca.dist" = NA,
"mean.error.scaled" = NA,
"pca.dist.scaled" = NA,
"combined.metric" = NA)
#put results into predicted file
predicted_filter <- predicted_filter %>%
add_row(summary)
combine_predicted_observed <- predicted_filter %>%
full_join(full_observed, by = 'Sample_Name') %>%
mutate(Latitude = case_when(!is.na(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment) ~ Observed_Latitude,
TRUE ~ Predicted_Latitude),
Longitude = case_when(!is.na(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment) ~ Observed_Longitude,
TRUE ~ Predicted_Longitude),
Log_Observed_Normalized_Respiration_Rate = log10(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment * -1),
Log_Predicted_Normalized_Respiration_Rate = log10(Predicted_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment * -1),
Site_ID = case_when(str_detect(Sample_Name, '^MP-|^SP-') ~ Sample_Name,
TRUE ~ Site_ID)) %>%
select(-Observed_Latitude, -Observed_Longitude, -Predicted_Latitude, -Predicted_Longitude)%>%
mutate(Sample_Name = case_when(is.na(Sample_Name) ~ 'N/A',
TRUE ~ Sample_Name),
Methods_Deviation = case_when(is.na(Methods_Deviation) | Methods_Deviation == '' ~ 'N/A',
TRUE ~ Methods_Deviation),
Site_ID = case_when(is.na(Site_ID) ~ 'N/A',
TRUE ~ Site_ID),
Observed_Sample_Date = as.character(str_c(' ', ymd(Observed_Sample_Date))),
Observed_Sample_Date = case_when(is.na(Observed_Sample_Date) ~ '-9999',
TRUE ~ Observed_Sample_Date),
Raw_Error = (Predicted_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment - Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment)/Predicted_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment,
Log_mean.error = log10(mean.error)) %>%
mutate_all(~replace_na(., -9999))
View(combine_predicted_observed)
rm(list=ls(all=T))
current_path <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("./../")
# File path to the dynamic learning rivers github repo
# https://github.com/parallelworks/dynamic-learning-rivers/tree/Nov-2023-log10
# Ensure you are on the correct branch. For this script, I am using the Nov-2023-log10-DO-update-correct branch
dynamic_learning_dir <- './../dynamic-learning-rivers/'
# Data downloaded from https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1923689
observed_CM <- read_csv('./v3_CM_SSS_Data_Package/Sample_Data/v2_CM_SSS_Sediment_Normalized_Respiration_Rates.csv',
skip = 2,
na = c('N/A', '-9999', NA, '')) %>%
filter(!is.na(Sample_Name)) %>%
select(-Field_Name, -Material, -IGSN) %>%
rename(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment) %>%
mutate(Parent_ID = str_extract(Sample_Name, '.{6}(?=_INC)'))
View(observed_CM)
# Data downloaded from https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1729719
# add deviations to S19S to match CM; pulled from "WHONDRS_S19S_Sediment_Normalized_Respiration_Methods.txt"
dev1 <- c("S19S_0006_SED_INC-D", "S19S_0011_SED_INC-M", "S19S_0013_SED_INC-D", "S19S_0013_SED_INC-M", "S19S_0013_SED_INC-U", "S19S_0014_SED_INC-D", "S19S_0014_SED_INC-M", "S19S_0016_SED_INC-M", "S19S_0020_SED_INC-M", "S19S_0021_SED_INC-D", "S19S_0024_SED_INC-D", "S19S_0024_SED_INC-M", "S19S_0024_SED_INC-U", "S19S_0039_SED_INC-D", "S19S_0039_SED_INC-U", "S19S_0040_SED_INC-U", "S19S_0044_SED_INC-D", "S19S_0044_SED_INC-M", "S19S_0044_SED_INC-U", "S19S_0047_SED_INC-M", "S19S_0047_SED_INC-U", "S19S_0054_SED_INC-D", "S19S_0054_SED_INC-M", "S19S_0054_SED_INC-U", "S19S_0055_SED_INC-D", "S19S_0059_SED_INC-D", "S19S_0061_SED_INC-D", "S19S_0061_SED_INC-M", "S19S_0066_SED_INC-M", "S19S_0066_SED_INC-U", "S19S_0067_SED_INC-D", "S19S_0067_SED_INC-M", "S19S_0067_SED_INC-U", "S19S_0087_SED_INC-D", "S19S_0089_SED_INC-D", "S19S_0089_SED_INC-M", "S19S_0097_SED_INC-U")
dev2 <- c("S19S_0006_SED_INC-D", "S19S_0006_SED_INC-M", "S19S_0006_SED_INC-U", "S19S_0007_SED_INC-D", "S19S_0007_SED_INC-U", "S19S_0008_SED_INC-D", "S19S_0008_SED_INC-M", "S19S_0008_SED_INC-U", "S19S_0009_SED_INC-D", "S19S_0009_SED_INC-M", "S19S_0009_SED_INC-U", "S19S_0010_SED_INC-D", "S19S_0010_SED_INC-M", "S19S_0010_SED_INC-U", "S19S_0036_SED_INC-M")
observed_S19S <- read_csv('./v8_WHONDRS_S19S_Sediment/WHONDRS_S19S_Sediment_Normalized_Respiration_Rates.csv') %>%
rename(Sample_Name = Sample_ID) %>%
mutate(Methods_Deviation1 = case_when(Sample_Name %in% dev1 ~ 'RATE_000',
TRUE ~ NA),
Methods_Deviation2 = case_when(Sample_Name %in% dev2 ~ 'INC_QA_002',
TRUE ~ NA)) %>%
unite(Methods_Deviation,
c(Methods_Deviation1, Methods_Deviation2),
sep = '; ',
na.rm = T)%>%
rename(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment)
# Ensure you are on the correct branch. For this script, I am using the Nov-2023-log10 branch
predicted <- read_csv(str_c(dynamic_learning_dir, '/scripts/post_01_output_ml_predict_avg.csv')) %>%
rename(Predicted_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment,
Predicted_Latitude = Sample_Latitude,
Predicted_Longitude = Sample_Longitude,
Sample_Name = Sample_ID)
View(predicted)
