geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") +
stat_poly_line(color = "black", alpha = 0.5) +
#stat_poly_eq(use_label(c( "R2"))) +
annotate(geom="text", x=0.25, y=3.9, label="R^2 = 0.78", color="black", size =4.5) + #update - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("Observed rates") +
ylab("Predicted rates") +
#scale_shape_manual(values = c(21, 16)) +
scale_color_manual(values = c( "lightblue", "maroon")) +
annotate(geom="text", x=0.25, y=3.7, label="R^2 = 0.41", color="maroon", size =4.5) + #update - not automatically added
annotate(geom="text", x=0.25, y=3.5, label="R^2 = 0.45", color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 18))
ggMarginal(fullscatter, groupColour = TRUE, groupFill = TRUE)
install.packages("ggExtra")
install.packages("ggExtra")
ggMarginal(fullscatter, groupColour = TRUE, groupFill = TRUE)
ggExtra::ggMarginal(fullscatter, groupColour = TRUE, groupFill = TRUE)
ggExtra::ggMarginal(fullscatter)
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+ #to see R^2 for above/below thresholds
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") +
stat_poly_line(color = "black", alpha = 0.5) +
#stat_poly_eq(use_label(c( "R2"))) +
annotate(geom="text", x=0.25, y=3.9, label="R^2 = 0.78", color="black", size =4.5) + #update - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("Observed rates") +
ylab("Predicted rates") +
#scale_shape_manual(values = c(21, 16)) +
scale_color_manual(values = c( "lightblue", "maroon")) +
annotate(geom="text", x=0.25, y=3.7, label="R^2 = 0.41", color="maroon", size =4.5) + #update - not automatically added
annotate(geom="text", x=0.25, y=3.5, label="R^2 = 0.45", color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 18),
legend.position = 0)
ggExtra::ggMarginal(fullscatter)
ggExtra::ggMarginal(fullscatter, groupFill = TRUE)
ggExtra::ggMarginal(fullscatter, Fill = "grey"")
ggExtra::ggMarginal(fullscatter, Fill = "grey")
ggExtra::ggMarginal(fullscatter, Fill = "grey")
ggExtra::ggMarginal(fullscatter, color = "grey")
ggExtra::ggMarginal(fullscatter, fill = "grey")
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+ #to see R^2 for above/below thresholds
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") +
stat_poly_line(color = "black", alpha = 0.5) +
#stat_poly_eq(use_label(c( "R2"))) +
annotate(geom="text", x=0.25, y=3.9, label="R^2 = 0.78", color="black", size =4.5) + #update - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("Observed rates") +
ylab("Predicted rates") +
#scale_shape_manual(values = c(21, 16)) +
scale_color_manual(values = c( "lightblue", "maroon")) +
annotate(geom="text", x=0.25, y=3.7, label="R^2 = 0.41", color="maroon", size =4.5) + #update - not automatically added
annotate(geom="text", x=0.25, y=3.5, label="R*2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 18),
legend.position = 0)
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+ #to see R^2 for above/below thresholds
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") +
stat_poly_line(color = "black", alpha = 0.5) +
#stat_poly_eq(use_label(c( "R2"))) +
annotate(geom="text", x=0.25, y=3.9, label="R^2 = 0.78", color="black", size =4.5) + #update - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("Observed rates") +
ylab("Predicted rates") +
#scale_shape_manual(values = c(21, 16)) +
scale_color_manual(values = c( "lightblue", "maroon")) +
annotate(geom="text", x=0.25, y=3.7, label="R^2 = 0.41", color="maroon", size =4.5) + #update - not automatically added
annotate(geom="text", x=0.25, y=3.5, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 18),
legend.position = 0)
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+ #to see R^2 for above/below thresholds
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") +
stat_poly_line(color = "black", alpha = 0.5) +
#stat_poly_eq(use_label(c( "R2"))) +
annotate(geom="text", x=0.25, y=3.9, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("Observed rates") +
ylab("Predicted rates") +
#scale_shape_manual(values = c(21, 16)) +
scale_color_manual(values = c( "lightblue", "maroon")) +
annotate(geom="text", x=0.25, y=3.7, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update - not automatically added
annotate(geom="text", x=0.25, y=3.5, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 18),
legend.position = 0)
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+ #to see R^2 for above/below thresholds
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") +
stat_poly_line(color = "black", alpha = 0.5) +
#stat_poly_eq(use_label(c( "R2"))) +
annotate(geom="text", x=0.25, y=3.9, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log(Observed rates)") +
ylab("log(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) +
scale_color_manual(values = c( "lightblue", "maroon")) +
annotate(geom="text", x=0.25, y=3.7, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update - not automatically added
annotate(geom="text", x=0.25, y=3.5, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 18),
legend.position = 0)
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+ #to see R^2 for above/below thresholds
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") +
stat_poly_line(color = "black", alpha = 0.5) +
#stat_poly_eq(use_label(c( "R2"))) +
annotate(geom="text", x=0.25, y=3.9, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log(Observed rates)") +
ylab("log(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) +
scale_color_manual(values = c( "lightblue", "maroon")) +
annotate(geom="text", x=0.25, y=3.7, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update - not automatically added
annotate(geom="text", x=0.25, y=3.5, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+ #to see R^2 for above/below thresholds
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") +
stat_poly_line(color = "black", alpha = 0.5) +
#stat_poly_eq(use_label(c( "R2"))) +
annotate(geom="text", x=0.25, y=0.9, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log(Observed rates)") +
ylab("log(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) +
scale_color_manual(values = c( "lightblue", "maroon")) +
annotate(geom="text", x=0.25, y=0.7, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update - not automatically added
annotate(geom="text", x=0.25, y=0.5, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+ #to see R^2 for above/below thresholds
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") +
stat_poly_line(color = "black", alpha = 0.5) +
#stat_poly_eq(use_label(c( "R2"))) +
annotate(geom="text", x=0.25, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log(Observed rates)") +
ylab("log(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) +
scale_color_manual(values = c( "lightblue", "maroon")) +
annotate(geom="text", x=0.25, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update - not automatically added
annotate(geom="text", x=0.25, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+
#to see R^2 for above/below thresholds, remove color grouping above and use stat poly eq fx (below)
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") + #not a clear threshold
stat_poly_line(color = "black", alpha = 0.5) + #overall best fit
#stat_poly_eq(use_label(c( "R2"))) + #remove hashtag to see R^2 of log500 split
annotate(geom="text", x=0.25, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update if data changes - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ), #above/below threshold best fit
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log10(Observed rates)") +
ylab("log10(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) + #shape or color by iteration
scale_color_manual(values = c( "lightblue", "maroon")) +
#update if data changes - not automatically added
annotate(geom="text", x=0.25, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update if data changes - not automatically added
annotate(geom="text", x=0.25, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
#adding density plots on axes
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+
#to see R^2 for above/below thresholds, remove color grouping above and use stat poly eq fx (below)
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") + #not a clear threshold
geom_abline (linetype = "dashed", color="black") + #not a clear threshold
stat_poly_line(color = "black", alpha = 0.5) + #overall best fit
#stat_poly_eq(use_label(c( "R2"))) + #remove hashtag to see R^2 of log500 split
annotate(geom="text", x=0.25, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update if data changes - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ), #above/below threshold best fit
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log10(Observed rates)") +
ylab("log10(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) + #shape or color by iteration
scale_color_manual(values = c( "lightblue", "maroon")) +
#update if data changes - not automatically added
annotate(geom="text", x=0.25, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update if data changes - not automatically added
annotate(geom="text", x=0.25, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
#adding density plots on axes
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+
#to see R^2 for above/below thresholds, remove color grouping above and use stat poly eq fx (below)
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") + #not a clear threshold
geom_abline (linetype = "dashed", color="black") + #not a clear threshold
stat_poly_line(color = "black", alpha = 0.5) + #overall best fit
#stat_poly_eq(use_label(c( "R2"))) + #remove hashtag to see R^2 of log500 split
annotate(geom="text", x=3.5, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update if data changes - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ), #above/below threshold best fit
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log10(Observed rates)") +
ylab("log10(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) + #shape or color by iteration
scale_color_manual(values = c( "lightblue", "maroon")) +
#update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
#adding density plots on axes
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+
#to see R^2 for above/below thresholds, remove color grouping above and use stat poly eq fx (below)
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") + #not a clear threshold
geom_abline (linetype = "longdashed", color="black") + #not a clear threshold
stat_poly_line(color = "black", alpha = 0.5) + #overall best fit
#stat_poly_eq(use_label(c( "R2"))) + #remove hashtag to see R^2 of log500 split
annotate(geom="text", x=3.5, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update if data changes - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ), #above/below threshold best fit
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log10(Observed rates)") +
ylab("log10(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) + #shape or color by iteration
scale_color_manual(values = c( "lightblue", "maroon")) +
#update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
#adding density plots on axes
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+
#to see R^2 for above/below thresholds, remove color grouping above and use stat poly eq fx (below)
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") + #not a clear threshold
geom_abline (linetype = "long dashed", color="black") + #not a clear threshold
stat_poly_line(color = "black", alpha = 0.5) + #overall best fit
#stat_poly_eq(use_label(c( "R2"))) + #remove hashtag to see R^2 of log500 split
annotate(geom="text", x=3.5, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update if data changes - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ), #above/below threshold best fit
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log10(Observed rates)") +
ylab("log10(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) + #shape or color by iteration
scale_color_manual(values = c( "lightblue", "maroon")) +
#update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
#adding density plots on axes
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+
#to see R^2 for above/below thresholds, remove color grouping above and use stat poly eq fx (below)
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") + #not a clear threshold
geom_abline (linetype = "longdash", color="black") + #not a clear threshold
stat_poly_line(color = "black", alpha = 0.5) + #overall best fit
#stat_poly_eq(use_label(c( "R2"))) + #remove hashtag to see R^2 of log500 split
annotate(geom="text", x=3.5, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update if data changes - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ), #above/below threshold best fit
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log10(Observed rates)") +
ylab("log10(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) + #shape or color by iteration
scale_color_manual(values = c( "lightblue", "maroon")) +
#update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
#adding density plots on axes
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+
#to see R^2 for above/below thresholds, remove color grouping above and use stat poly eq fx (below)
geom_point(color = "darkgrey", size = 3, pch = 21) +
# geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") + #not a clear threshold
geom_abline (linetype = "longdash", color="black") + #not a clear threshold
stat_poly_line(color = "black", alpha = 0.5) + #overall best fit
#stat_poly_eq(use_label(c( "R2"))) + #remove hashtag to see R^2 of log500 split
annotate(geom="text", x=3.5, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update if data changes - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ), #above/below threshold best fit
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log10(Observed rates)") +
ylab("log10(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) + #shape or color by iteration
scale_color_manual(values = c( "lightblue", "maroon")) +
#update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
#adding density plots on axes
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+
#to see R^2 for above/below thresholds, remove color grouping above and use stat poly eq fx (below)
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="dark grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") + #not a clear threshold
geom_abline (linetype = "longdash", color="black") + #not a clear threshold
stat_poly_line(color = "black", alpha = 0.5) + #overall best fit
#stat_poly_eq(use_label(c( "R2"))) + #remove hashtag to see R^2 of log500 split
annotate(geom="text", x=3.5, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update if data changes - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ), #above/below threshold best fit
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log10(Observed rates)") +
ylab("log10(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) + #shape or color by iteration
scale_color_manual(values = c( "lightblue", "maroon")) +
#update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
#adding density plots on axes
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
fullscatter <-
combods %>% ggplot(aes(abs(Log_Observed_Normalized_Respiration_Rate ),
abs(Log_Predicted_Normalized_Respiration_Rate) )) +
# ,  color =  ds_split))+
#to see R^2 for above/below thresholds, remove color grouping above and use stat poly eq fx (below)
geom_point(color = "darkgrey", size = 3, pch = 21) +
geom_vline (xintercept = 2.7, linetype = "dashed", color="grey") +
#geom_hline (yintercept = 2.7, linetype = "dashed", color="dark grey") + #not a clear threshold
geom_abline (linetype = "longdash", color="black") + #not a clear threshold
stat_poly_line(color = "black", alpha = 0.5) + #overall best fit
#stat_poly_eq(use_label(c( "R2"))) + #remove hashtag to see R^2 of log500 split
annotate(geom="text", x=3.5, y=0.75, label="R^2 == 0.78",parse =TRUE, color="black", size =4.5) + #update if data changes - not automatically added
geom_smooth( aes(abs(Log_Observed_Normalized_Respiration_Rate ), #above/below threshold best fit
abs(Log_Predicted_Normalized_Respiration_Rate),
color =  ds_split), method = "lm", alpha = 0.2) +
xlab("log10(Observed rates)") +
ylab("log10(Predicted rates)") +
#scale_shape_manual(values = c(21, 16)) + #shape or color by iteration
scale_color_manual(values = c( "lightblue", "maroon")) +
#update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.5, label="R^2 == 0.41",parse =TRUE, color="maroon", size =4.5) + #update if data changes - not automatically added
annotate(geom="text", x=3.5, y=0.25, label="R^2 == 0.45", parse =TRUE,
color="lightblue", size =4.5) + #update - not automatically added
lims(y = c(0,4), x = c(0,4)) +
theme_classic() +
theme(text = element_text(size = 16),
legend.position = 0)
#adding density plots on axes
ggExtra::ggMarginal(fullscatter, fill = "lightgrey")
knitr::opts_chunk$set(echo = TRUE)
current_path <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("./../")
getwd()
library(tidyverse)
library(colourpicker)
library(lubridate)
library(emmeans)
library(sf)
library(ggspatial)
library(spData)
library(ggpmisc)
#install.packages("ggpubr")
library("rstudioapi")
#install.packages("ggExtra")
library(ggExtra)
library(patchwork)
combods <- read.csv("ICON-ModEx_Combined_Predicted_Observed_Respiration_Rates.csv")
getwd()
combods <- read.csv("ICON-ModEx_Combined_Predicted_Observed_Respiration_Rates.csv")
