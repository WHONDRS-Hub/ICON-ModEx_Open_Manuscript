mutate(
Sample_Name = str_remove(Sample_Name, '-1'),
Sample_Name = str_remove(Sample_Name, '-2'),
Sample_Name = str_remove(Sample_Name, '-3'),
Sample_Name = str_remove(Sample_Name, '-4'),
Sample_Name = str_remove(Sample_Name, '-5'),
Sample_Name = str_remove(Sample_Name, '-6'),
Sample_Name = str_remove(Sample_Name, '_INC')
)
resp_data <- resp_data %>%
filter(!Sample_Name %in% c('N/A', '-9999', NA),
Field_Name != '#End_Data')%>%
mutate(Field_Name = 'N/A',
Respiration_Rate_mg_DO_per_L_per_H = as.numeric(Respiration_Rate_mg_DO_per_L_per_H))
resp_summary <- resp_data %>%
group_by(Sample_Name) %>%
mutate(count_resp = sum(!is.na(Respiration_Rate_mg_DO_per_L_per_H))) %>%
summarize(
Field_Name = NA,
Material = unique(Material),
Mean_Respiration_Rate_mg_DO_per_L_per_H = mean(Respiration_Rate_mg_DO_per_L_per_H, na.rm = T),
Mean_Missing_Reps = ifelse(count_resp<3, TRUE, FALSE),
count_resp = unique(count_resp)
) %>%
filter(!is.na(Sample_Name)) %>%
select(Field_Name, Sample_Name, Material, Mean_Respiration_Rate_mg_DO_per_L_per_H, Mean_Missing_Reps) %>%
distinct()
combine <- combine %>%
full_join(resp_summary, by = c("Field_Name", "Sample_Name", "Material")) %>%
arrange(Sample_Name) %>%
unite(Mean_Missing_Reps, Mean_Missing_Reps.x, Mean_Missing_Reps.y, remove = T, na.rm = T)%>%
mutate(Mean_Missing_Reps = ifelse(str_detect(Mean_Missing_Reps, 'TRUE'), TRUE, FALSE))%>%
filter(!is.na(Sample_Name))
combine_headers <- combine_headers %>%
left_join(resp_boye_headers)
}
# ==================================== SSA ===============================
SSA_file <- analyte_files[grepl("SSA", analyte_files)]
if (length(SSA_file) > 0) {
SSA_boye_headers <- read_csv(SSA_file, n_max = 11, skip = 2)%>%
select("Field_Name","Sample_Name","Material","Specific_Surface_Area_m2_per_g")
SSA_data <- read_csv(SSA_file, skip = 2, na = '-9999') %>%
filter(!Sample_Name %in% c('N/A', '-9999', NA)) %>%
mutate(
Sample_Name = str_remove(Sample_Name, '-1'),
Sample_Name = str_remove(Sample_Name, '-2'),
Sample_Name = str_remove(Sample_Name, '-3'),
Sample_Name = str_remove(Sample_Name, '-4'),
Sample_Name = str_remove(Sample_Name, '-5'),
Sample_Name = str_remove(Sample_Name, '_MOI')
)
SSA_data <- SSA_data %>%
filter(!Sample_Name %in% c('N/A', '-9999', NA),
Field_Name != '#End_Data')%>%
mutate(Field_Name = 'N/A',
Specific_Surface_Area_m2_per_g = as.numeric(Specific_Surface_Area_m2_per_g))
SSA_summary <- SSA_data %>%
group_by(Sample_Name) %>%
mutate(count_SSA = sum(!is.na(Specific_Surface_Area_m2_per_g))) %>%
summarize(
Field_Name = NA,
Material = unique(Material),
Mean_Specific_Surface_Area_m2_per_g = mean(Specific_Surface_Area_m2_per_g, na.rm = T),
Mean_Missing_Reps = ifelse(count_SSA<3, TRUE, FALSE),
count_SSA = unique(count_SSA)
) %>%
filter(!is.na(Sample_Name)) %>%
select(Field_Name, Sample_Name, Material, Mean_Specific_Surface_Area_m2_per_g, Mean_Missing_Reps) %>%
distinct()
combine <- combine %>%
full_join(SSA_summary, by = c("Field_Name", "Sample_Name", "Material")) %>%
arrange(Sample_Name) %>%
unite(Mean_Missing_Reps, Mean_Missing_Reps.x, Mean_Missing_Reps.y, remove = T, na.rm = T)%>%
mutate(Mean_Missing_Reps = ifelse(str_detect(Mean_Missing_Reps, 'TRUE'), TRUE, FALSE))%>%
filter(!is.na(Sample_Name))
combine_headers <- combine_headers %>%
left_join(SSA_boye_headers)
}
# ==================================== Format =================================
if(material == 'Water'){
combine$Material <- 'Liquid>aqueous'
combine <- combine %>%
mutate(Sample_Name = str_c(Sample_Name, "_Water"))
} else{
combine$Material <- material
combine <- combine %>%
mutate(Sample_Name = str_c(Sample_Name, "_", material))
}
combine$Field_Name[1] <- '#Start_Data'
combine <- combine %>%
mutate_if(is.numeric, replace_na, replace = -9999)%>%
mutate_if(is.character, replace_na, replace = 'N/A')%>%
relocate(Mean_Missing_Reps, .after = last_col())%>%
mutate_if(is.numeric, round, 3)
combine[nrow(combine)+1,1] = "#End_Data"
combine_headers <- combine_headers %>%
add_column(Mean_Missing_Reps = 'N/A')
colnames(combine_headers) <- colnames(combine)
# =================================== Write File ===============================
columns <- length(combine)-1
header_rows <- length(combine_headers$Field_Name) + 1
top <- tibble('one' = as.character(),
'two' = as.numeric()) %>%
add_row(one = '#Columns',
two = columns) %>%
add_row(one = '#Header_Rows',
two = header_rows)
summary_out_file
summary_out_file <- "Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/CM_SSS_Data_Package_v3/v3_CM_SSS_Data_Package/TEMP_Summary_Wat/CM_SSS_Water_Summary.csv"
write_csv(top, summary_out_file, col_names = F)
write_csv(combine_headers, summary_out_file, append = T, col_names = T)
write_csv(combine, summary_out_file, append = T, na = '')
library(tidyverse)
library(readxl)
rm(list=ls(all=T))
boye_dir <- 'Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/CM_SSS_Data_Package_v3/v3_CM_SSS_Data_Package/New folder'
typical_codes <- paste0(dir, 'Protocols-Guidance-Workflows-Methods/Methods_Codes/Method_Typical_Codes.xlsx')
deviation_codes <- paste0(dir, 'Protocols-Guidance-Workflows-Methods/Methods_Codes/Method_Deviation_Codes.xlsx')
dir <- 'C:/Users/forb086/OneDrive - PNNL/Data Generation and Files/'
typical_codes <- paste0(dir, 'Protocols-Guidance-Workflows-Methods/Methods_Codes/Method_Typical_Codes.xlsx')
deviation_codes <- paste0(dir, 'Protocols-Guidance-Workflows-Methods/Methods_Codes/Method_Deviation_Codes.xlsx')
boye_files <- list.files(boye_dir, full.names = T)
boye_files
deviations_combine <- tibble(Methods_Deviations = as.character())
typical_combine <- tibble(Typical = as.character())
for (boye_file in boye_files) {
data <- read_csv(boye_file, skip = 2, na = c('N/A', 'NA'))
data_columns <- data %>%
select(-Field_Name, -Sample_Name, -Material, -Methods_Deviation) %>%
colnames()
for (column in data_columns) {
check <- data %>%
select(one_of(column)) %>%
slice(c(3)) %>%
pull()
if(!is.na(check) == TRUE){
typical <- data %>%
select(one_of(column))%>%
slice(c(3:8, 11))%>%
pull()
typical_combine <-  typical_combine %>%
add_row(Typical = typical)
deviations <- data %>%
select(Methods_Deviation)%>%
filter(Methods_Deviation != '',
Methods_Deviation != 'NA',
Methods_Deviation != 'N/A',
!is.na(Methods_Deviation))%>%
mutate(Methods_Deviation = str_replace(Methods_Deviation,',', ';'))%>%
pull() %>%
paste(collapse = '; ')
unique_deviations <- unlist(str_split(deviations, ';'))%>%
unique()
deviations_combine <- deviations_combine %>%
add_row(Methods_Deviations = unique_deviations)
}
}
}
boye_files <- list.files(boye_dir,full.names = T)
for (boye_file in boye_files) {
data <- read_csv(boye_file, skip = 2, na = c('N/A', 'NA'))
data_columns <- data %>%
select(-Field_Name, -Sample_Name, -Material, -Methods_Deviation) %>%
colnames()
for (column in data_columns) {
check <- data %>%
select(one_of(column)) %>%
slice(c(3)) %>%
pull()
if(!is.na(check) == TRUE){
typical <- data %>%
select(one_of(column))%>%
slice(c(3:8, 11))%>%
pull()
typical_combine <-  typical_combine %>%
add_row(Typical = typical)
deviations <- data %>%
select(Methods_Deviation)%>%
filter(Methods_Deviation != '',
Methods_Deviation != 'NA',
Methods_Deviation != 'N/A',
!is.na(Methods_Deviation))%>%
mutate(Methods_Deviation = str_replace(Methods_Deviation,',', ';'))%>%
pull() %>%
paste(collapse = '; ')
unique_deviations <- unlist(str_split(deviations, ';'))%>%
unique()
deviations_combine <- deviations_combine %>%
add_row(Methods_Deviations = unique_deviations)
}
}
}
deviations_combine <- tibble(Methods_Deviations = as.character())
typical_combine <- tibble(Typical = as.character())
for (boye_file in boye_files) {
data <- read_csv(boye_file, skip = 2, na = c('N/A', 'NA'))
data_columns <- data %>%
select(-Field_Name, -Sample_Name, -Methods_Deviation) %>%
colnames()
data_columns <- data_columns[ !grepl('Material',data_columns)]
for (column in data_columns) {
check <- data %>%
select(one_of(column)) %>%
slice(c(3)) %>%
pull()
if(!is.na(check) == TRUE){
typical <- data %>%
select(one_of(column))%>%
slice(c(3:8, 11))%>%
pull()
typical_combine <-  typical_combine %>%
add_row(Typical = typical)
deviations <- data %>%
select(Methods_Deviation)%>%
filter(Methods_Deviation != '',
Methods_Deviation != 'NA',
Methods_Deviation != 'N/A',
!is.na(Methods_Deviation))%>%
mutate(Methods_Deviation = str_replace(Methods_Deviation,',', ';'))%>%
pull() %>%
paste(collapse = '; ')
unique_deviations <- unlist(str_split(deviations, ';'))%>%
unique()
deviations_combine <- deviations_combine %>%
add_row(Methods_Deviations = unique_deviations)
}
}
}
deviations_combine$Methods_Deviations <- gsub(' ', '', deviations_combine$Methods_Deviations)
deviations_combine <- deviations_combine %>%
filter(Methods_Deviations != 'NA',
Methods_Deviations != '') %>%
unique()
typical_combine <-typical_combine %>%
filter(Typical != 'NA',
Typical != '')%>%
unique()
typical_sheets <- excel_sheets(typical_codes)
typical_sheets <- typical_sheets[ !grepl('readme',typical_sheets)]
all_typical <- map_df(typical_sheets, ~read_excel(typical_codes, sheet = .x))
deviation_sheets <- excel_sheets(deviation_codes)
deviation_sheets <- deviation_sheets[ !grepl('readme',deviation_sheets)]
all_deviation <- map_df(deviation_sheets, ~read_excel(deviation_codes, sheet = .x))
typical_filter <- all_typical %>%
filter(Method_ID %in% typical_combine$Typical) %>%
select(contains('Method_'))
deviation_filter <- all_deviation %>%
filter(Method_ID %in% deviations_combine$Methods_Deviations)%>%
select(contains('Method_'))
methods <- typical_filter %>%
add_row(deviation_filter)%>%
arrange(Method_Name)
write_excel_csv(methods, paste0(boye_dir, study_code, '_Methods_Codes.csv' ))
study_code <- 'CM_SSS'
write_excel_csv(methods, paste0(boye_dir, study_code, '_Methods_Codes.csv' ))
boye_dir
library(tidyverse)
library(crayon)
rm(list=ls(all=T))
dp_dir <- choose.dir()
file <- file.choose()
top <- read_csv(file, n_max = 2, col_names = F) %>%
select(1:2)
header <- read_csv(file, skip = 2, n_max = 11) %>%
mutate(IGSN = Sample_Name, .after = 'Sample_Name')
data <- read_csv(file, skip = 2) %>%
filter(!Sample_Name %in% c('N/A', '-9999')) %>%
mutate(Parent_ID = str_extract(Sample_Name, '.{6}'))
material <- data %>%
select(Material) %>%
filter(!is.na(Material)) %>%
distinct() %>%
pull()
View(data)
View(header)
View(top)
if (material == 'Liquid>aqueous'){
material <- 'Water'
}
igsn <- read_csv(list.files(dp_dir, 'IGSN', full.names = T), skip = 1) %>%
select(Sample_Name, IGSN) %>%
filter(str_detect(Sample_Name, material)) %>%
mutate(Parent_ID = str_extract(Sample_Name, '.{6}')) %>%
select(-Sample_Name)
combine <- data %>%
left_join(igsn, by = 'Parent_ID') %>%
relocate(IGSN, .after = 'Sample_Name') %>%
select(-Parent_ID)
igsn_missing <- combine %>%
filter(!is.na(Sample_Name), is.na(IGSN))
if(nrow(igsn_missing) > 0){
cat(
red$bold(
'Wait! Some samples are missing IGSNs'
)
)
view(igsn_missing)
user <- (readline(prompt = "Is it okay that these samples are missing IGSNs? (Y/N) "))
if(user == 'Y'){
combine <- combine %>%
mutate(IGSN = case_when(is.na(IGSN)~'N/A',
TRUE ~ IGSN))
write_csv(top, file, col_names = F)
write_csv(header, file, col_names = T, append = T)
write_csv(combine, file, append = T, na = '')
}
} else {
write_csv(top, file, col_names = F)
write_csv(header, file, col_names = T, append = T)
write_csv(combine, file, append = T, na = '')
}
file <- file.choose()
top <- read_csv(file, n_max = 2, col_names = F) %>%
select(1:2)
header <- read_csv(file, skip = 2, n_max = 11) %>%
mutate(IGSN = Sample_Name, .after = 'Sample_Name')
data <- read_csv(file, skip = 2) %>%
filter(!Sample_Name %in% c('N/A', '-9999')) %>%
mutate(Parent_ID = str_extract(Sample_Name, '.{6}'))
material <- data %>%
select(Material) %>%
filter(!is.na(Material)) %>%
distinct() %>%
pull()
if (material == 'Liquid>aqueous'){
material <- 'Water'
}
igsn <- read_csv(list.files(dp_dir, 'IGSN', full.names = T), skip = 1) %>%
select(Sample_Name, IGSN) %>%
filter(str_detect(Sample_Name, material)) %>%
mutate(Parent_ID = str_extract(Sample_Name, '.{6}')) %>%
select(-Sample_Name)
# =========================== add IGSN and write out ===========================
combine <- data %>%
left_join(igsn, by = 'Parent_ID') %>%
relocate(IGSN, .after = 'Sample_Name') %>%
select(-Parent_ID)
igsn_missing <- combine %>%
filter(!is.na(Sample_Name), is.na(IGSN))
if(nrow(igsn_missing) > 0){
cat(
red$bold(
'Wait! Some samples are missing IGSNs'
)
)
view(igsn_missing)
user <- (readline(prompt = "Is it okay that these samples are missing IGSNs? (Y/N) "))
if(user == 'Y'){
combine <- combine %>%
mutate(IGSN = case_when(is.na(IGSN)~'N/A',
TRUE ~ IGSN))
write_csv(top, file, col_names = F)
write_csv(header, file, col_names = T, append = T)
write_csv(combine, file, append = T, na = '')
}
} else {
write_csv(top, file, col_names = F)
write_csv(header, file, col_names = T, append = T)
write_csv(combine, file, append = T, na = '')
}
file <- file.choose()
top <- read_csv(file, n_max = 2, col_names = F) %>%
select(1:2)
header <- read_csv(file, skip = 2, n_max = 11) %>%
mutate(IGSN = Sample_Name, .after = 'Sample_Name')
data <- read_csv(file, skip = 2) %>%
filter(!Sample_Name %in% c('N/A', '-9999')) %>%
mutate(Parent_ID = str_extract(Sample_Name, '.{6}'))
material <- data %>%
select(Material) %>%
filter(!is.na(Material)) %>%
distinct() %>%
pull()
if (material == 'Liquid>aqueous'){
material <- 'Water'
}
igsn <- read_csv(list.files(dp_dir, 'IGSN', full.names = T), skip = 1) %>%
select(Sample_Name, IGSN) %>%
filter(str_detect(Sample_Name, material)) %>%
mutate(Parent_ID = str_extract(Sample_Name, '.{6}')) %>%
select(-Sample_Name)
# =========================== add IGSN and write out ===========================
combine <- data %>%
left_join(igsn, by = 'Parent_ID') %>%
relocate(IGSN, .after = 'Sample_Name') %>%
select(-Parent_ID)
igsn_missing <- combine %>%
filter(!is.na(Sample_Name), is.na(IGSN))
if(nrow(igsn_missing) > 0){
cat(
red$bold(
'Wait! Some samples are missing IGSNs'
)
)
view(igsn_missing)
user <- (readline(prompt = "Is it okay that these samples are missing IGSNs? (Y/N) "))
if(user == 'Y'){
combine <- combine %>%
mutate(IGSN = case_when(is.na(IGSN)~'N/A',
TRUE ~ IGSN))
write_csv(top, file, col_names = F)
write_csv(header, file, col_names = T, append = T)
write_csv(combine, file, append = T, na = '')
}
} else {
write_csv(top, file, col_names = F)
write_csv(header, file, col_names = T, append = T)
write_csv(combine, file, append = T, na = '')
}
View(igsn)
View(combine)
View(data)
combine <- combine %>%
mutate(IGSN = case_when(is.na(IGSN)~'N/A',
TRUE ~ IGSN),
IGSN = case_when(Field_Name == '#End_Data'~ NA,
TRUE ~ IGSN))
View(combine)
library(tidyverse)
rm(list=ls(all=T))
# ================================= User inputs ================================
current_path <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd(".")
# ==========================  find and read data files =========================
# Data downloaded from https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1923689
observed_CM <- read_csv('./v2_CM_SSS_Data_Package/CM_SSS_Sediment_Normalized_Respiration_Rates.csv',
skip = 2,
na = c('N/A', '-9999', NA, '')) %>%
filter(!is.na(Sample_Name)) %>%
select(-Field_Name, -Material) %>%
rename(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment) %>%
mutate(Parent_ID = str_extract(Sample_Name, '.{6}(?=_INC)'))
# Data downloaded from https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1729719
# add deviations to S19S to match CM; pulled from "WHONDRS_S19S_Sediment_Normalized_Respiration_Methods.txt"
dev1 <- c("S19S_0006_SED_INC-D", "S19S_0011_SED_INC-M", "S19S_0013_SED_INC-D", "S19S_0013_SED_INC-M", "S19S_0013_SED_INC-U", "S19S_0014_SED_INC-D", "S19S_0014_SED_INC-M", "S19S_0016_SED_INC-M", "S19S_0020_SED_INC-M", "S19S_0021_SED_INC-D", "S19S_0024_SED_INC-D", "S19S_0024_SED_INC-M", "S19S_0024_SED_INC-U", "S19S_0039_SED_INC-D", "S19S_0039_SED_INC-U", "S19S_0040_SED_INC-U", "S19S_0044_SED_INC-D", "S19S_0044_SED_INC-M", "S19S_0044_SED_INC-U", "S19S_0047_SED_INC-M", "S19S_0047_SED_INC-U", "S19S_0054_SED_INC-D", "S19S_0054_SED_INC-M", "S19S_0054_SED_INC-U", "S19S_0055_SED_INC-D", "S19S_0059_SED_INC-D", "S19S_0061_SED_INC-D", "S19S_0061_SED_INC-M", "S19S_0066_SED_INC-M", "S19S_0066_SED_INC-U", "S19S_0067_SED_INC-D", "S19S_0067_SED_INC-M", "S19S_0067_SED_INC-U", "S19S_0087_SED_INC-D", "S19S_0089_SED_INC-D", "S19S_0089_SED_INC-M", "S19S_0097_SED_INC-U")
dev2 <- c("S19S_0006_SED_INC-D", "S19S_0006_SED_INC-M", "S19S_0006_SED_INC-U", "S19S_0007_SED_INC-D", "S19S_0007_SED_INC-U", "S19S_0008_SED_INC-D", "S19S_0008_SED_INC-M", "S19S_0008_SED_INC-U", "S19S_0009_SED_INC-D", "S19S_0009_SED_INC-M", "S19S_0009_SED_INC-U", "S19S_0010_SED_INC-D", "S19S_0010_SED_INC-M", "S19S_0010_SED_INC-U", "S19S_0036_SED_INC-M")
observed_S19S <- read_csv('./v8_WHONDRS_S19S_Sediment/WHONDRS_S19S_Sediment_Normalized_Respiration_Rates.csv') %>%
rename(Sample_Name = Sample_ID) %>%
mutate(Methods_Deviation1 = case_when(Sample_Name %in% dev1 ~ 'RATE_000',
TRUE ~ NA),
Methods_Deviation2 = case_when(Sample_Name %in% dev2 ~ 'INC_QA_002',
TRUE ~ NA)) %>%
unite(Methods_Deviation,
c(Methods_Deviation1, Methods_Deviation2),
sep = '; ',
na.rm = T)%>%
rename(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment)
# Data downloaded from https://github.com/parallelworks/dynamic-learning-rivers/tree/main
predicted <- read_csv('./filtered_predict_output_Nov2023.csv') %>%
rename(Predicted_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment,
Predicted_Latitude = Sample_Latitude,
Predicted_Longitude = Sample_Longitude,
Site_ID = Sample_ID)
# ========  find and read metadata files and combine with observed data ========
CM_metadata <- read_csv('./v2_CM_SSS_Data_Package/v2_CM_SSS_Field_Metadata.csv')
CM_coords <- CM_metadata %>%
select(Parent_ID, Sample_Latitude, Sample_Longitude, Site_ID) %>%
rename(Observed_Latitude = Sample_Latitude,
Observed_Longitude = Sample_Longitude)
S19S_metadata <- read_csv('./v8_WHONDRS_S19S_Sediment/WHONDRS_S19S_Sediment_Metadata/v4_WHONDRS_S19S_Metadata.csv') %>%
filter(Study_Code != 'Study code')
# pivot the upstream, downstream, and midstream coordinates to each be a row
u <- S19S_metadata %>%
select(Sample_ID,  US_Latitude_dec.deg, US_Longitude_dec.deg) %>%
rename(Observed_Latitude = US_Latitude_dec.deg,
Observed_Longitude = US_Longitude_dec.deg) %>%
mutate(Sample_Name = paste0(Sample_ID, "_SED_INC-U"))
m <- S19S_metadata %>%
select(Sample_ID,  MS_Latitude_dec.deg, MS_Longitude_dec.deg) %>%
rename(Observed_Latitude = MS_Latitude_dec.deg,
Observed_Longitude = MS_Longitude_dec.deg) %>%
mutate(Sample_Name = paste0(Sample_ID, "_SED_INC-M"))
d <- S19S_metadata %>%
select(Sample_ID,  DS_Latitude_dec.deg, DS_Longitude_dec.deg) %>%
rename(Observed_Latitude = DS_Latitude_dec.deg,
Observed_Longitude = DS_Longitude_dec.deg) %>%
mutate(Sample_Name = paste0(Sample_ID, "_SED_INC-D"))
S19S_coords <- u %>%
add_row(m) %>%
add_row(d) %>%
arrange(Sample_ID) %>%
rename(Site_ID = Sample_ID)
observed_CM_combine <- observed_CM %>%
full_join(CM_coords) %>%
select(-Parent_ID) %>%
mutate(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment = as.numeric(Observed_Normalized_Respiration_Rate_mg_DO_per_H_per_L_sediment))
observed_S19S_combine <- observed_S19S %>%
left_join(S19S_coords) %>%
mutate(Observed_Latitude = as.numeric(Observed_Latitude),
Observed_Longitude = as.numeric(Observed_Longitude))
full_observed <- observed_CM_combine %>%
add_row(observed_S19S_combine)
# ====================== combine predicted and observed ========================
combine_predicted_observed <- predicted %>%
full_join(full_observed)
# ============================ compare coord
View(combine_predicted_observed)
View(observed_CM)
View(observed_S19S)
sharepoint <- 'C:/Users/forb086/OneDrive - PNNL/Data Generation and Files/ECA/Optode multi reactor/'
photos <- list.files(sharepoint, '.tif', recursive = T, full.names = T)
photo <- photos[1]
photo
file_path <- photo %>%
str_remove(sharepoint)
file_path
new_path <- str_c(sharedrive, file_path, '')
sharedrive <- 'Y:/Optode_multi_reactor/'
new_path <- str_c(sharedrive, file_path, '')
new_path
file_path
